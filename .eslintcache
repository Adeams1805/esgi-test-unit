[{"C:\\laragon\\www\\esgi\\esgi-test-unit\\src\\index.js":"1","C:\\laragon\\www\\esgi\\esgi-test-unit\\src\\App.js":"2","C:\\laragon\\www\\esgi\\esgi-test-unit\\src\\components\\User.js":"3","C:\\laragon\\www\\esgi\\esgi-test-unit\\src\\components\\Item.js":"4","C:\\laragon\\www\\esgi\\esgi-test-unit\\src\\components\\ToDoList.js":"5","C:\\laragon\\www\\esgi\\esgi-test-unit\\src\\components\\EmailService.js":"6","C:\\laragon\\www\\esgi\\esgi-test-unit\\src\\routes.js":"7"},{"size":234,"mtime":1612970452762,"results":"8","hashOfConfig":"9"},{"size":5909,"mtime":1613128733655,"results":"10","hashOfConfig":"9"},{"size":1299,"mtime":1612970452759,"results":"11","hashOfConfig":"9"},{"size":726,"mtime":1612970452755,"results":"12","hashOfConfig":"9"},{"size":1533,"mtime":1613128112521,"results":"13","hashOfConfig":"9"},{"size":378,"mtime":1612970452754,"results":"14","hashOfConfig":"9"},{"size":318,"mtime":1613128632714,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"nilj9q",{"filePath":"19","messages":"20","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"18"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"18"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"18"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"C:\\laragon\\www\\esgi\\esgi-test-unit\\src\\index.js",[],["35","36"],"C:\\laragon\\www\\esgi\\esgi-test-unit\\src\\App.js",["37","38"],"import { useState, useEffect } from 'react';\r\nimport './app.scss';\r\nimport ToDoList from './components/ToDoList';\r\nimport Item from './components/Item';\r\nimport User from './components/User';\r\nimport moment from 'moment';\r\nimport { postItem } from './routes';\r\n\r\nexport const App = () => {\r\n  const [firstname, setFirstname] = useState(\"\");\r\n  const [lastname, setLastname] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [ddn, setDDN] = useState(\"\");\r\n  const [pwd, setPwd] = useState(\"\");\r\n\r\n  const [todo, setToDo] = useState(null);\r\n  const [itemName, setItemName] = useState(\"\");\r\n  const [itemContent, setItemContent] = useState(\"\");\r\n  const [adding, setAdding] = useState(false);\r\n\r\n  const login = (e) => {\r\n    e.preventDefault();\r\n    const user = new User({\r\n      prenom: firstname, \r\n      nom: lastname, \r\n      email: email, \r\n      ddn: ddn,\r\n      mdp: pwd\r\n    });\r\n    if(user.isValid()) {\r\n      localStorage.setItem(\"user\", JSON.stringify({\r\n        firstname: user.prenom,\r\n        lastname: user.nom,\r\n        email: user.email,\r\n        ddn: user.ddn,\r\n        pwd: user.mdp\r\n      }));\r\n      //setToDo(new ToDoList(user, []));\r\n      setFirstname(\"\");\r\n      setLastname(\"\");\r\n      setEmail(\"\");\r\n      setDDN(\"\");\r\n      setPwd(\"\");\r\n    }\r\n  }\r\n\r\n  const logout = () => {\r\n    localStorage.removeItem(\"user\");\r\n    setToDo(null);\r\n    setAdding(false);\r\n    setItemName(\"\");\r\n    setItemContent(\"\");\r\n  }\r\n\r\n  const handleAdd = () => {\r\n    postItem(itemName, itemContent, new Date().toJSON())\r\n    .then(function(response){\r\n      if(response.status === 200 && todo.add(itemName, itemContent, new Date())) {\r\n        setAdding(false);\r\n        setItemName(\"\");\r\n        setItemContent(\"\");\r\n      }\r\n    })\r\n  }\r\n\r\n  useEffect(() => {\r\n    if(todo === null) {\r\n      fetch('/items')\r\n      .then(res => res.json())\r\n      .then(items => setToDo(new ToDoList(new User({\r\n          prenom: JSON.parse(localStorage.getItem(\"user\")).firstname, \r\n          nom: JSON.parse(localStorage.getItem(\"user\")).lastname, \r\n          email: JSON.parse(localStorage.getItem(\"user\")).email, \r\n          ddn: JSON.parse(localStorage.getItem(\"user\")).ddn,\r\n          mdp: JSON.parse(localStorage.getItem(\"user\")).pwd\r\n        }),\r\n        items.map(it => new Item({\r\n          name: it.name,\r\n          content: it.content,\r\n          createdAt: it.createdAt\r\n        }))\r\n      )));\r\n    }\r\n  }, []);\r\n\r\n  //page s'actualise\r\n  /*if(todo === null && localStorage.getItem(\"user\") !== null) setToDo(new ToDoList(new User({\r\n    prenom: JSON.parse(localStorage.getItem(\"user\")).firstname, \r\n    nom: JSON.parse(localStorage.getItem(\"user\")).lastname, \r\n    email: JSON.parse(localStorage.getItem(\"user\")).email, \r\n    ddn: JSON.parse(localStorage.getItem(\"user\")).ddn,\r\n    mdp: JSON.parse(localStorage.getItem(\"user\")).pwd\r\n  }), []));*/\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      {localStorage.getItem(\"user\") === null ?\r\n      <div className=\"connexion\">\r\n        <form className=\"connexionForm\" onSubmit={(e) => login(e)}>\r\n          <div>\r\n            <label htmlFor=\"firstName\">Prénom</label>\r\n            <input id=\"firstName\" type=\"text\" value={firstname} onChange={(e) => setFirstname(e.target.value)}/>\r\n          </div>\r\n\r\n          <div>\r\n            <label htmlFor=\"lastName\">Nom</label>\r\n            <input id=\"lastName\" type=\"text\" value={lastname} onChange={(e) => setLastname(e.target.value)}/>\r\n          </div>\r\n\r\n          <div>\r\n            <label htmlFor=\"firstName\">Email</label>\r\n            <input id=\"firstName\" type=\"text\" value={email} onChange={(e) => setEmail(e.target.value)}/>\r\n          </div>\r\n          \r\n          <div>\r\n            <label htmlFor=\"firstName\">Date de naissance</label>\r\n            <input id=\"firstName\" type=\"date\" value={ddn} onChange={(e) => setDDN(e.target.value)}/>\r\n          </div>\r\n          \r\n          <div>\r\n            <label htmlFor=\"firstName\">Mot de passe <span className=\"small\">(entre 8 et 40 caractères)</span></label>\r\n            <input id=\"firstName\" type=\"password\" value={pwd} onChange={(e) => setPwd(e.target.value)}/>\r\n          </div>\r\n\r\n          <button type=\"submit\">Se connecter</button>\r\n        </form>\r\n      </div>\r\n      :\r\n      <div className=\"main\">\r\n        <nav>\r\n          <p>{JSON.parse(localStorage.getItem(\"user\")).firstname} {JSON.parse(localStorage.getItem(\"user\")).lastname}</p>\r\n          <i className=\"fas fa-sign-out-alt\" onClick={() => logout()}></i>\r\n        </nav>\r\n\r\n        <div className=\"todolist\">\r\n          <div className=\"header\">\r\n            <h2>ToDoList</h2>\r\n            <i className=\"fas fa-plus-circle\" onClick={() => !adding && setAdding(true)}></i>\r\n          </div>\r\n          <div className=\"list\">\r\n            {todo !== null && todo.items.map((item, i) =>\r\n              <div className=\"listItem\" key={`item-${i}`}>\r\n                <p className=\"title\">{item.name}</p>\r\n                <p className=\"content\">{item.content}</p>\r\n                <span className=\"createdAt\">{item.createdAt.toLocaleString()}</span>\r\n              </div>\r\n            )}\r\n            {adding &&\r\n            <div className=\"listItem\">\r\n              <input type=\"text\" placeholder=\"Nom...\" value={itemName} onChange={(e) => setItemName(e.target.value)}/>\r\n              <textarea rows={3} placeholder=\"Texte...\" value={itemContent} onChange={(e) => setItemContent(e.target.value)}></textarea>\r\n              <div className=\"footer\">\r\n                <span className=\"addItem\" onClick={() => handleAdd()}>Ajouter</span>\r\n                <span className=\"cancelItem\" onClick={() => {\r\n                  setAdding(false);\r\n                  setItemName(\"\");\r\n                  setItemContent(\"\");\r\n                }}>Annuler</span>\r\n              </div>\r\n            </div>\r\n            }\r\n          </div>\r\n        </div>\r\n      </div>\r\n      }\r\n    </div>\r\n  );\r\n}","C:\\laragon\\www\\esgi\\esgi-test-unit\\src\\components\\User.js",["39","40","41","42"],"export default class User {\r\n    constructor(user) {\r\n      this.nom = user.nom;\r\n      this.prenom = user.prenom;\r\n      this.email = user.email;\r\n      this.ddn = user.ddn;\r\n      this.mdp = user.mdp;\r\n    }\r\n    \r\n    isValid() {      \r\n      //check prenom renseigne\r\n      if(this.prenom === \"\" || this.prenom === null || this.prenom === undefined) return false;\r\n      \r\n      //check nom renseigne\r\n      if(this.nom === \"\" || this.nom === null || this.nom === undefined) return false;\r\n      \r\n      //check email valide\r\n      let re = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n      if(this.email === \"\" || this.email === null || this.email === undefined || !re.test(this.email)) return false;\r\n      \r\n      //check date valid\r\n      if(this.ddn === null || this.ddn === undefined || this.ddn === \"\") return false;\r\n      //check 13 ans ou +\r\n      let diff = (new Date() - new Date(this.ddn))/31536000000;\r\n      if(isNaN(diff) || diff < 13) return false;\r\n\r\n      //check mdp valide\r\n      if(this.mdp === \"\" || this.mdp === null || this.mdp === undefined || this.mdp.length < 8 || this.mdp.length > 40) return false;\r\n      \r\n      //valid\r\n      return true;\r\n    }\r\n}","C:\\laragon\\www\\esgi\\esgi-test-unit\\src\\components\\Item.js",[],"C:\\laragon\\www\\esgi\\esgi-test-unit\\src\\components\\ToDoList.js",["43"],"import Item from './Item';\r\nimport moment from 'moment';\r\nimport * as EmailService from './EmailService';\r\nimport testUtils from 'react-dom/test-utils';\r\n\r\nexport default class ToDoList {\r\n    constructor(user, items) {\r\n        this.user = user;\r\n        this.items = [...items];\r\n    }\r\n\r\n    add(name, content, createdAt) {\r\n        const it = new Item({name, content, createdAt});\r\n\r\n        if(it.isValid()) {\r\n            //check moins de 10 items\r\n            if(this.items.length >= 10) return false;\r\n\r\n            //check name unique\r\n            if(this.items.find(el => el.name === name) !== undefined) return false;\r\n\r\n            //check 30 min\r\n            if(this.items.length !== 0) {\r\n                const currentItemDate = moment(createdAt.toJSON());\r\n                const lastItemDate = moment(new Date(this.items[this.items.length-1].createdAt).toJSON());\r\n                if(currentItemDate.diff(lastItemDate, \"minutes\") < 30) return false;\r\n            }\r\n\r\n            //envoi mail au 8eme item\r\n            if(this.items.length === 7) {\r\n                const params = {\r\n                    name: `${JSON.parse(localStorage.getItem(\"user\")).firstname} ${JSON.parse(localStorage.getItem(\"user\")).lastname}`,\r\n                    email: JSON.parse(localStorage.getItem(\"user\")).email\r\n                }\r\n                EmailService.send(params.name, params.email);\r\n            }\r\n\r\n            //add\r\n            this.items.push(it);\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n}","C:\\laragon\\www\\esgi\\esgi-test-unit\\src\\components\\EmailService.js",[],["44","45"],"C:\\laragon\\www\\esgi\\esgi-test-unit\\src\\routes.js",[],{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","severity":1,"message":"51","line":6,"column":8,"nodeType":"52","messageId":"53","endLine":6,"endColumn":14},{"ruleId":"54","severity":1,"message":"55","line":84,"column":6,"nodeType":"56","endLine":84,"endColumn":8,"suggestions":"57"},{"ruleId":"58","severity":1,"message":"59","line":18,"column":38,"nodeType":"60","messageId":"61","endLine":18,"endColumn":39,"suggestions":"62"},{"ruleId":"58","severity":1,"message":"59","line":18,"column":63,"nodeType":"60","messageId":"61","endLine":18,"endColumn":64,"suggestions":"63"},{"ruleId":"58","severity":1,"message":"59","line":18,"column":72,"nodeType":"60","messageId":"61","endLine":18,"endColumn":73,"suggestions":"64"},{"ruleId":"58","severity":1,"message":"59","line":18,"column":76,"nodeType":"60","messageId":"61","endLine":18,"endColumn":77,"suggestions":"65"},{"ruleId":"50","severity":1,"message":"66","line":4,"column":8,"nodeType":"52","messageId":"53","endLine":4,"endColumn":17},{"ruleId":"46","replacedBy":"67"},{"ruleId":"48","replacedBy":"68"},"no-native-reassign",["69"],"no-negated-in-lhs",["70"],"no-unused-vars","'moment' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'todo'. Either include it or remove the dependency array.","ArrayExpression",["71"],"no-useless-escape","Unnecessary escape character: \\\".","Literal","unnecessaryEscape",["72","73"],["74","75"],["76","77"],["78","79"],"'testUtils' is defined but never used.",["69"],["70"],"no-global-assign","no-unsafe-negation",{"desc":"80","fix":"81"},{"messageId":"82","fix":"83","desc":"84"},{"messageId":"85","fix":"86","desc":"87"},{"messageId":"82","fix":"88","desc":"84"},{"messageId":"85","fix":"89","desc":"87"},{"messageId":"82","fix":"90","desc":"84"},{"messageId":"85","fix":"91","desc":"87"},{"messageId":"82","fix":"92","desc":"84"},{"messageId":"85","fix":"93","desc":"87"},"Update the dependencies array to be: [todo]",{"range":"94","text":"95"},"removeEscape",{"range":"96","text":"97"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"98","text":"99"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"100","text":"97"},{"range":"101","text":"99"},{"range":"102","text":"97"},{"range":"103","text":"99"},{"range":"104","text":"97"},{"range":"105","text":"99"},[2430,2432],"[todo]",[567,568],"",[567,567],"\\",[592,593],[592,592],[601,602],[601,601],[605,606],[605,605]]